const hash = {
	// 解析
	parse: (url) => {
		let hash = url.split('#').length > 1 ? url.split('#')[1].split('&') : [];
		let result = {};
		
		if(hash.length === 0){
			return {};
		}
		hash.forEach(item => {
			let key = item.split('=')[0];
			let value = item.split('=')[1];

			result[key] = value;
		});
		return result;
	},
	// 设置
	set: (json) => {
		if(typeof json !== 'object'){
			throw Error('params json expect object');
		}
		
		let parse = Object.assign({}, hash.parse(window.location.href), json);
		let hashArray = Object.keys(parse).map(key => {
			if(parse[key]){
				return `${key}=${parse[key]}`;	
			}			
		});
		hashArray = hashArray.filter(item => !!item);
		window.location.hash = `#${hashArray.join('&')}`;
	},
	// 移除
	del: (keys) => {
		console.log(keys);
		if(typeof keys === 'string'){
			hash.set({
				[keys]: undefined
			})
		}else if(Object.prototype.toString.apply(keys) === '[object Array]'){
			keys.forEach(key => {
				hash.set({
					[key]: undefined
				})	
			})
		}else{
			throw Error('params keys expect string or array');
		}
	}
}

export default hash;